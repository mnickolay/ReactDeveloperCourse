{"version":3,"sources":["component/logo/logo.component.js","component/card/card.component.js","component/card-list/card-list.component.js","component/search-field/search-field.component.js","App.js","reportWebVitals.js","index.js"],"names":["Logo","className","Card","props","alt","src","monster","id","name","email","CardList","monsters","map","SearchField","type","placeholder","onChange","e","setSearchField","target","value","toString","App","useState","setMonsters","searchField","useEffect","fetch","then","response","json","users","filteredMonsters","filter","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAOeA,G,MAJF,kBACT,oBAAIC,UAAU,OAAd,+BCOWC,G,MARF,SAAAC,GAAK,OACd,sBAAKF,UAAU,iBAAf,UACI,qBAAKG,IAAI,UAAUC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,eACtB,6BAAKJ,EAAMG,QAAQE,OACnB,4BAAIL,EAAMG,QAAQG,aCKXC,G,MARE,SAAAP,GAAK,OAClB,qBAAKF,UAAU,YAAf,SACKE,EAAMQ,SAASC,KAAI,SAAAN,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCQhBM,G,MAZK,SAAAV,GAChB,OACI,qBAAKF,UAAU,sBAAf,SACI,uBAAOA,UAAU,eACVa,KAAK,SACLC,YAAY,sBACZC,SAAU,SAAAC,GAAC,OAAId,EAAMe,eAAeD,EAAEE,OAAOC,MAAMC,mBCqBvDC,G,MAvBH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACTZ,EADS,KACCa,EADD,OAEsBD,mBAAS,IAF/B,mBAETE,EAFS,KAEIP,EAFJ,KAIhBQ,qBAAU,WACRC,MAAM,6CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAIP,EAAYO,SAG/B,IAAMC,EAAmBrB,EAASsB,QAAO,SAAA3B,GAAO,OAC9CA,EAAQE,KAAK0B,cAAcC,SAASV,EAAYS,kBAGlD,OACE,sBAAKjC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAaiB,eAAgBA,IAC7B,cAAC,EAAD,CAAUP,SAAUqB,SCbXI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5c3e87eb.chunk.js","sourcesContent":["import React from 'react'\r\nimport './logo.styles.css'\r\n\r\nconst Logo = () => (\r\n    <h1 className='logo'>Monster Rolodex</h1>\r\n)\r\n\r\nexport default Logo","import React from 'react'\r\nimport './card.styles.css'\r\n\r\nconst Card = props => (\r\n    <div className='card-container'>\r\n        <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2`} />\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n)\r\n\r\nexport default Card","import React from 'react'\r\nimport Card from '../card/card.component'\r\nimport './card-list.styles.css'\r\n\r\nconst CardList = props => (\r\n    <div className='card-list'>\r\n        {props.monsters.map(monster => (\r\n            <Card key={monster.id} monster={monster}/>\r\n        ))}\r\n    </div>\r\n)\r\n\r\nexport default CardList;","import React from 'react'\r\nimport './search-field.styles.css'\r\n\r\nconst SearchField = props => {\r\n    return(\r\n        <div className='search-input-parent'>\r\n            <input className='search-input'\r\n                   type='search'\r\n                   placeholder='Search For Monsters'\r\n                   onChange={e => props.setSearchField(e.target.value.toString())}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchField","import React, { useState, useEffect } from 'react'\nimport Logo from './component/logo/logo.component'\nimport CardList from './component/card-list/card-list.component'\nimport SearchField from './component/search-field/search-field.component'\n\nimport './App.css'\n\nconst App = () => {\n  const [monsters, setMonsters] = useState([])\n  const [searchField, setSearchField] = useState('')\n\n  useEffect(() => {\n    fetch('http://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => setMonsters(users))\n  })\n\n  const filteredMonsters = monsters.filter(monster => \n    monster.name.toLowerCase().includes(searchField.toLowerCase())\n  )\n\n  return (\n    <div className='App'>\n      <Logo />\n      <SearchField setSearchField={setSearchField}/>\n      <CardList monsters={filteredMonsters}/>\n    </div>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}